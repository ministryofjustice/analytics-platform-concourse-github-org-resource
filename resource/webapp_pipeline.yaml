---
jobs:
- name: deploy
  plan:
  - aggregate:
    - get: release
      trigger: true
      params:
        include_source_tarball: true

    - get: common-tasks

  - task: webapp-source
    file: common-tasks/extract-release-tarball.yaml
    output_mapping: {extracted: webapp-source}
  - task: lint-deploy
    file: common-tasks/validate-deploy-file.yaml
  - aggregate:
    - task: deploy-params
      file: common-tasks/parse-deploy-file.yaml
      params:
        IPS_DOM1: ((secrets.ip-dom1))
        IPS_DIGITAL: ((secrets.ip-digital))
        IPS_QUANTUM: ((secrets.ip-quantum))
        IPS_102PF_WIFI: ((secrets.ip-102pf))
        IPS_TURING: ((secrets.ip-turing))
        IPS_MOJO: ((secrets.ip-mojo))
    - task: parameter-store
      file: common-tasks/param-store-env-vars.yaml
      params:
        AWS_DEFAULT_REGION: ((secrets.aws-region))
        AWS_ACCESS_KEY_ID: ((secrets.parameter-access-key-id))
        AWS_SECRET_ACCESS_KEY: ((secrets.parameter-secret-access-key))
        APP_NAME: ((app-name))

    - put: webapp-docker-repo

  - aggregate:
    - task: webapp-docker-image
      privileged: true
      file: common-tasks/webapp-docker-image.yaml
      params:
        AWS_ACCESS_KEY_ID: ((secrets.ecr-access-key-id))
        AWS_SECRET_ACCESS_KEY: ((secrets.ecr-secret-access-key))

    - put: webapp-auth0-client

    - task: iam-role-name
      file: common-tasks/get-iam-role.yaml
      output_mapping: {output: aws}
      params:
        ORG_NAME: ((github-org))
        REPO_NAME: ((github-repo))
        CPANEL_API_PASSWORD: ((secrets.cpanel-api-password))
        CPANEL_API_URL: ((secrets.cpanel-api-url))
        CPANEL_API_USER: ((secrets.cpanel-api-user))

    - get: config-repo

  - put: webapp-helm-release
    params:
      chart: mojanalytics/webapp
      values:
      - webapp-auth0-client/credentials.yaml
      - config-repo/chart-env-config/alpha/webapp.yml
      - deploy-params/overrides.yaml
      - parameter-store/env-vars.yaml
      override_values:
      - { key: WebApp.Name, value: ((app-name)) }
      - { key: WebApp.BaseHost, value: ((secrets.app-domain)) }
      - { key: WebApp.GithubRepo, value: ((github-repo)) }
      - { key: WebApp.Image.Repository, path: webapp-docker-repo/uri }
      - { key: WebApp.Image.Tag, path: release/tag }
      - { key: AWS.IAMRole, path: aws/iam_role_name }
      - { key: CookieSecret, value: ((secrets.cookie-secret)) }
  - try:
      put: deployment-status
      params:
        kubectl: rollout status deployment/((app-name))-webapp -w --timeout=1h
        wait_until_ready: 0

resources:
- name: config-repo
  type: git
  source:
    uri: https://github.com/ministryofjustice/analytics-platform-config.git
    git_crypt_key: ((secrets.gitcrypt-symmetric-key))

- name: common-tasks
  type: git
  source:
    uri: https://github.com/ministryofjustice/analytics-platform-common-concourse-tasks.git

- name: release
  type: github-release
  webhook_token: ((secrets.github-webhook-token))
  check_every: 24h
  source:
    owner: ((github-org))
    repository: ((github-repo))
    access_token: ((secrets.github-access-token))

- name: webapp-auth0-client
  type: auth0-client
  source:
    app-name: ((app-name))
    app-domain: ((secrets.app-domain))
    client-id: ((secrets.auth0-client-id))
    client-secret: ((secrets.auth0-client-secret))
    domain: ((secrets.auth0-domain))
    authz-url: ((secrets.auth0-authz-url))
    authz-audience: ((secrets.auth0-authz-audience))

- name: webapp-docker-repo
  type: ecr-repo
  source:
    name: ((app-name))
    region: ((secrets.aws-region))

- name: webapp-helm-release
  type: helm
  source:
    cluster_url: ((secrets.kubernetes-api-url))
    cluster_ca: ((secrets.kubernetes-ca-cert))
    helm_host: tiller-deploy.kube-system:44134
    token: ((secrets.kubernetes-token))
    namespace: apps-prod
    release: ((app-name))
    repos:
    - name: mojanalytics
      url: http://moj-analytics-helm-repo.s3-website-eu-west-1.amazonaws.com
    stable_repo: https://charts.helm.sh/stable

- name: deployment-status
  type: kubernetes
  source:
    server: ((secrets.kubernetes-api-url))
    namespace: apps-prod
    token: ((secrets.kubernetes-token))
    insecure_skip_tls_verify: true

resource_types:
- name: auth0-client
  type: docker-image
  source:
    repository: quay.io/mojanalytics/concourse-auth0-resource
    tag: v2.0.3

- name: ecr-repo
  type: docker-image
  source:
    repository: quay.io/mojanalytics/concourse-ecr-resource
    tag: v0.1.0

- name: helm
  type: docker-image
  source:
    repository: 593291632749.dkr.ecr.eu-west-1.amazonaws.com/concourse-helm-resource
    tag: 2.13.1

- name: kubernetes
  type: docker-image
  source:
    repository: 593291632749.dkr.ecr.eu-west-1.amazonaws.com/concourse-kubernetes-resource
    tag: "1.15"
